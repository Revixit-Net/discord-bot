import discord
from discord.ext import commands
import logging
from utils.database import DatabaseManager
from config import Config

logger = logging.getLogger("discord_bot")

class AdminTools(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db = DatabaseManager()
        self.admin_role_id = Config.ADMIN_ROLE_ID

    async def cog_check(self, ctx):
        if not any(role.id == self.admin_role_id for role in ctx.author.roles):
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º: {ctx.author} (ID: {ctx.author.id})")
            raise commands.MissingPermissions(["administrator"])
        return True

    @commands.command(name="delete_user", help="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª–æ–≥–∏–Ω—É")
    async def delete_user(self, ctx, username: str):
        logger.info(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç {ctx.author}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username}")

        try:
            deleted_count = self.db.delete_user(username)
            
            if deleted_count > 0:
                logger.warning(f"–£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ: {username} | –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {ctx.author.id}")
                await ctx.send(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç `{username}` —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!")
            else:
                logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {username}")
                await ctx.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {username}: {str(e)}", exc_info=True)
            await ctx.send("‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏!")

    @commands.command(name="user_info", help="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    async def get_user_info(self, ctx, username: str):
        logger.info(f"–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {username}")

        try:
            with self.db as cursor:
                cursor.execute(
                    """SELECT uuid, discord_id, serverID 
                    FROM users 
                    WHERE username = ?""",
                    (username,)
                )
                result = cursor.fetchone()

                if result:
                    uuid, discord_id, server_id = result
                    embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {username}", color=0x00ff00)
                    embed.add_field(name="UUID", value=f"`{uuid}`", inline=False)
                    embed.add_field(name="Discord ID", value=f"`{discord_id}`", inline=False)
                    embed.add_field(name="–°–µ—Ä–≤–µ—Ä", value=server_id, inline=False)
                    
                    logger.debug(f"–£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {username}")
                    await ctx.send(embed=embed)
                else:
                    await ctx.send("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")
            await ctx.send("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö")

    @delete_user.error
    @get_user_info.error
    async def admin_error_handler(self, ctx, error):
        if isinstance(error, commands.MissingRequiredArgument):
            await ctx.send(f"‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: `{error.param.name}`")
        elif isinstance(error, commands.MissingPermissions):
            await ctx.send("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã!")
        else:
            await ctx.send("‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")

async def setup(bot):
    await bot.add_cog(AdminTools(bot))
    logger.info("–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")